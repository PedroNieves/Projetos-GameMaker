<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the Player Stats object
display_set_gui_size(view_wview[0], view_hview[0]);

// Initialize some variables
hp = 3;
maxhp = 3;
saphlife = 0;
sapphires = 0;
score = 0;
highscore = 0;
time = 0;
cheat = ""
godmode = false;
cheattime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// To start the game
var start = keyboard_check_pressed(vk_space);

if (gamepad_is_connected(0)) {
    start = gamepad_button_check_pressed(0, gp_start);
}

if (start == true and room  == rm_menu) {
    room_goto(rm_one);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play the background music

audio_em = audio_emitter_create();
audio_emitter_gain(audio_em, .5);
audio_play_sound_on(audio_em, snd_music, true, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the stats
switch (room) {
    case rm_menu:
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        draw_text_colour(room_width/2+4, 24+6, "Super Cave#Boy", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 24, "Super Cave#Boy", c_white, c_white, c_white, c_white, 1);
        
        var str;
        if(gamepad_is_connected(0)) {
            str = "Press [Start] to Play";
        }else {
            str = "Press [Space] to Play";
        }
        
        draw_set_font(fnt_sapphire);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_white, c_white, c_white, c_white, 1);
        break;
        
    case rm_highscore:
        draw_set_halign(fa_center)
        draw_text_colour(view_wview[0]/2, 80, "Your Time Was: " + string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_wview[0]/2, 112, "Your Score Was: " + string(score), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_wview[0]/2, 144, "The Highscore is: " + string(highscore), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(room_width/2+2, room_height-44, "Press Esc to Exit", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, "Press Esc to Exit", c_white, c_white, c_white, c_white, 1);
        break;
    default:
        // Draw the hearts spaces
        for (var i = 0; i &lt; maxhp; i++) {
            draw_sprite_ext(spr_heart, 0, 24+i*16, 20, 0.5, 0.5, 0, c_black, .5); 
        }
        
        // Draw the hearts
        for (var i = 0; i &lt; hp; i++) {
            draw_sprite_ext(spr_heart, 0, 24+i*16, 20, 0.5, 0.5, 0, c_white, 1); 
        }
        
        //Draw the sapphire count
        draw_set_halign(fa_right);
        draw_set_font(fnt_sapphire);
        var str = "x" + string(sapphires);
        draw_text_colour(view_wview[0] - 16, 12, str, c_white, c_white, c_white, c_white, 1);
        
        var text_width = string_width(str);
        draw_sprite_ext(spr_sapphire_gui, 0, view_wview[0] - 26 - text_width, 18, 0.5, 0.5, 0, c_white, 1); 
       
        //Adding to the Time
        time += 1;
        cheattime += 1/30;
        //Draw the timer
        draw_text_colour(view_wview[0]/2 + 32, 8, "Time: " + string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End the game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheats
/// Cheats Input


switch(keyboard_lastkey)
{
    case ord("A"):
        cheat = cheat+"A";
        keyboard_lastkey = 0;
        break;
    
    case ord("B"):
        cheat = cheat+"B";
        keyboard_lastkey = 0;
        break;
    
    case ord("C"):
        cheat = cheat+"C";
        keyboard_lastkey = 0;
        break;
        
    case ord("D"):
        cheat = cheat+"D";
        keyboard_lastkey = 0;
        break;
        
    case ord("E"):
        cheat = cheat+"E";
        keyboard_lastkey = 0;
        break;
        
    case ord("F"):
        cheat = cheat+"F";
        keyboard_lastkey = 0;
        break;
        
    case ord("G"):
        cheat = cheat+"G";
        keyboard_lastkey = 0;
        break;
        
    case ord("H"):
        cheat = cheat+"H";
        keyboard_lastkey = 0;
        break;
        
    case ord("I"):
        cheat = cheat+"I";
        keyboard_lastkey = 0;
        break;
        
    case ord("J"):
        cheat = cheat+"J";
        keyboard_lastkey = 0;
        break;
        
    case ord("K"):
        cheat = cheat+"K";
        keyboard_lastkey = 0;
        break;     
        
    case ord("L"):
        cheat = cheat+"L";
        keyboard_lastkey = 0;
        break;
        
    case ord("M"):
        cheat = cheat+"M";
        keyboard_lastkey = 0;
        break;
        
    case ord("N"):
        cheat = cheat+"N";
        keyboard_lastkey = 0;
        break;
        
    case ord("O"):
        cheat = cheat+"O";
        keyboard_lastkey = 0;
        break;
        
    case ord("P"):
        cheat = cheat+"P";
        keyboard_lastkey = 0;
        break;
        
    case ord("Q"):
        cheat = cheat+"Q";
        keyboard_lastkey = 0;
        break;
        
    case ord("R"):
        cheat = cheat+"R";
        keyboard_lastkey = 0;
        break;
        
    case ord("S"):
        cheat = cheat+"S";
        keyboard_lastkey = 0;
        break;
        
    case ord("T"):
        cheat = cheat+"T";
        keyboard_lastkey = 0;
        break;
        
    case ord("U"):
        cheat = cheat+"U";
        keyboard_lastkey = 0;
        break;
        
    case ord("V"):
        cheat = cheat+"V";
        keyboard_lastkey = 0;
        break;
        
    case ord("W"):
        cheat = cheat+"W";
        keyboard_lastkey = 0;
        break;
        
    case ord("X"):
        cheat = cheat+"X";
        keyboard_lastkey = 0;
        break;
        
    case ord("Y"):
        cheat = cheat+"Y";
        keyboard_lastkey = 0;
        break;
        
    case ord("Z"):
        cheat = cheat+"Z";
        keyboard_lastkey = 0;
        break;
}

if (cheat == "YOLO"){
    show_message("You Only Live Once!");
    maxhp = 1;
    hp = maxhp;
    cheat = "";
}

if (cheat == "GOD") {
    if (godmode == true) {
        godmode = false;
        show_message("God Mode OFF!");
    }else if (godmode == false) {
        godmode = true;
        show_message("God Mode ON!");
    }
    cheat = "";
}

if (cheat == "HEAL") {
    hp = maxhp;
    cheat = "";
}

if (cheat == "KYREON") {
    maxhp = 5
    cheat = ""
} 


if (cheattime &gt;= 5) {
    cheat = "";
    cheattime = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Fullscreen

//Toggle Fullscreen

if keyboard_check_pressed(vk_f4)
   {
   if window_get_fullscreen()
      {
      window_set_fullscreen(false);
      }
   else
      {
      window_set_fullscreen(true);
      }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
